<h1>{{#if article.id}}编辑文章{{else}}添加文章{{/if}}</h1>
<form action="/admin/articles{{#if article.id}}/{{article.id}}{{/if}}" method="POST" id="articleForm">
  {{#if article.id}}<input type="hidden" name="_method" value="PUT">{{/if}}
  <div class="mb-3">
    <label for="title" class="form-label">标题</label>
    <input type="text" class="form-control" id="title" name="title" value="{{article.title}}">
  </div>
  <div class="mb-3">
    <label for="content" class="form-label">内容</label>
    {{!-- <textarea class="form-control" id="content" name="content" rows="10">{{article.content}}</textarea> --}}
    <div id="editor">
      {{{article.content}}}
    </div>
    <input type="hidden" name="content" id="contentInput">
  </div>
  <div class="mb-3">
    <label class="form-label">分类</label>
    <div id="categoryTree" class="border rounded p-3"></div>
  </div>
  <div class="mb-3">
    <label for="tags" class="form-label">标签</label>
    <div class="d-flex flex-wrap">
      {{#each tags}}
      <div class="form-check me-3 mb-2">
        <input class="form-check-input" type="checkbox" name="tagIds" value="{{this.id}}" {{#if (contains (mapToIds
          ../article.tags) this.id )}}checked{{/if}}>
        <label class="form-check-label">{{this.name}}</label>
      </div>
      {{/each}}
    </div>
  </div>
  <div class="mb-3">
    <label for="status" class="form-label">状态</label>
    <select class="form-control" id="status" name="status">
      <option value="1" {{#if article.status}}selected{{/if}}>激活</option>
      <option value="0" {{#unless article.status}}selected{{/unless}}>未激活</option>
    </select>
  </div>
  <button type="submit" class="btn btn-primary">保存</button>
</form>
<script type="importmap">
  {
    "imports": {
      "ckeditor5": "/js/ckeditor5.js"
    }
  }
</script>
<script type="module">
  import {
    ClassicEditor,
    Essentials,
    Bold,
    Italic,
    Font,
    Paragraph,
    Image,
    ImageToolbar,
    ImageUpload,
    ImageResize,
    ImageStyle,
    Plugin,
    SimpleUploadAdapter
  } from 'ckeditor5';
  // 异步函数，用于获取文件上传的签名信息
  async function getSignature(key) {
    // 发送请求到后台接口，获取 COS 上传的签名信息
    const response = await fetch(`/admin/cos-signature?key=${encodeURIComponent(key)}`);
    // 返回签名信息的 JSON 数据
    return response.json();
  }
  // 自定义的 COS 上传适配器类，用于将文件上传到腾讯云 COS
  class COSUploadAdapter {
    // 构造函数，接收一个文件加载器实例
    constructor(loader) {
      this.loader = loader;
    }
    // 上传方法，负责将文件上传到 COS
    async upload() {
      // 等待加载器获取要上传的文件
      const file = await this.loader.file;
      // 获取文件的上传签名信息
      const signature = await getSignature(file.name);
      // 从签名信息中解构出存储桶、区域、文件键名和签名
      const { bucket, region, key, sign } = signature;
      // 构造文件上传的 URL
      const url = `https://${signature.bucket}.cos.${signature.region}.myqcloud.com/${signature.key}`;
      // 发送 PUT 请求，将文件上传到 COS
      return fetch(url, {
        method: 'PUT', // 使用 PUT 方法上传文件
        headers: { Authorization: sign }, // 设置请求头，包含签名信息
        body: file // 请求体为文件本身
      }).then(response => {
        // 上传成功后，返回包含文件 URL 的对象
        return { default: url };
      });
    }
  }
  // 插件类，用于将 COS 上传适配器集成到 CKEditor
  class COSUploadAdapterPlugin extends Plugin {
    // 静态方法，定义插件的依赖关系
    static get requires() {
      return [ImageUpload]; // 依赖 ImageUpload 插件
    }
    // 插件初始化方法
    init() {
      // 获取文件库插件，并设置创建上传适配器的函数
      this.editor.plugins.get('FileRepository').createUploadAdapter = (loader) => new COSUploadAdapter(loader);
    }
  }
  ClassicEditor
    .create(document.querySelector('#editor'), {
      plugins: [
        Essentials,
        Bold,
        Italic,
        Font,
        Paragraph,
        Image,
        ImageToolbar,
        ImageStyle,
        ImageResize,
        ImageUpload,
        SimpleUploadAdapter,
        COSUploadAdapterPlugin
      ],
      image: {
        toolbar: ['imageTextAlternative', 'imageStyle:side', 'resizeImage:50', 'resizeImage:75', 'resizeImage:original']
      },
      toolbar: {
        items: [
          'undo', 'redo', '|', 'bold', 'italic', '|',
          'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
          'insertImage'
        ]
      },
      simpleUpload: {
        uploadUrl: '/admin/upload',
        withCredentials: true,
        headers: {
          Authorization: 'Bearer <JSON Web Token>'
        }
      }
    })
    .then(editor => {
      const form = document.getElementById('articleForm');
      const contentInput = document.getElementById('contentInput');
      form.addEventListener('submit', () => {
        contentInput.value = editor.getData();
      });
    })
    .catch(error => {
      console.error(error.stack);
    });
</script>
<script>
  const categoryTree = {{{ json categoryTree }}};
  const selectedCategoryIds = {{{ mapToIds article.categories }}};
  function renderCategoryTree(categoryes) {
    let html = '<ul class="list-unstyled">';
    categoryes.forEach(function (category) {
      html += `
           <li class="mb-2">
               <div class="d-flex align-items-center">
                   ${category.children?.length > 0 ? '<span class="toggle me-2 cursor-pointer"><i class="bi bi-folder-minus"></i></span>' : '<span class="me-4"></span>'}
                   <label class="form-check-label">
                       <input type="checkbox" class="form-check-input" name="categoryIds" value="${category.id}" ${selectedCategoryIds.includes(category.id) ? 'checked' : ''}>
                       ${category.name}
                   </label>
               </div>
               ${category.children?.length > 0 ? `<div class="children ms-4" >${renderCategoryTree(category.children)}</div>` : ''}
           </li>`;
    });
    html += '</ul>';
    return html;
  }
  $(function () {
    $('#categoryTree').html(renderCategoryTree(categoryTree));
    $('body').on('click', '.toggle', function () {
      const childrenContainer = $(this).parent().siblings('.children');
      if (childrenContainer.is(':visible')) {
        childrenContainer.hide();
        $(this).html('<i class="bi bi-folder-plus"></i>');
      } else {
        childrenContainer.show();
        $(this).html('<i class="bi bi-folder-minus"></i>');
      }
    });
  });
</script>
